name: Build and Push Docker Image

on:
  # push:
  #   branches-ignore:
  #     - main
  pull_request:
    types: [opened, labeled, reopened, synchronize]
    branches:
      - main

jobs:
  build:
    name: Build Docker Image
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Add Preview Label
        if: github.event.action == 'opened'
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.addLabels({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              labels: ['preview']
            })

      - name: Set Environment Variables
        run: |
          # Get the SHA from the PR's head ref using GitHub API
          PR_HEAD_SHA=$(curl -s -H "Accept: application/vnd.github.v3+json" -H "Authorization: token ${{ github.token }}" \
            "https://api.github.com/repos/${{ github.repository }}/pulls/${{ github.event.pull_request.number }}" \
            | jq -r '.head.sha')
          echo "PR HEAD SHA from API: ${PR_HEAD_SHA}"
          if [ -z "${PR_HEAD_SHA}" ]; then
            echo "Failed to get SHA from API, using PR head SHA directly"
            PR_HEAD_SHA="${{ github.event.pull_request.head.sha }}"
          fi
          echo "FULL_SHA=${PR_HEAD_SHA}" >> $GITHUB_ENV
          echo "PR_NUMBER=${{ github.event.pull_request.number }}" >> $GITHUB_ENV
          echo "Current branch: ${GITHUB_REF#refs/heads/}"
          echo "Final PR HEAD SHA: ${PR_HEAD_SHA}"

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Dockerfile
          push: true
          tags: bhatiasunny/my-preview-app:pr-${{ env.PR_NUMBER }}-${{ env.FULL_SHA }}

      - name: Update Preview Kustomization
        run: |
          cd preview-kustomize
          echo "Contents of kustomization.yaml before update:"
          cat kustomization.yaml
          
          if [ -f "kustomization.yaml" ]; then
            echo "✅ Found kustomization.yaml, updating..."
            sed -i "s|newTag:.*|newTag: pr-${{ env.PR_NUMBER }}-${{ env.FULL_SHA }}|g" kustomization.yaml
            echo "Contents of kustomization.yaml after update:"
            cat kustomization.yaml
          else
            echo "❌ ERROR: kustomization.yaml not found!"
            exit 1
          fi
          
          git config --global user.name "github-actions"
          git config --global user.email "github-actions@github.com"
          
          git add kustomization.yaml
          git commit -m "Update preview image tag to pr-${{ env.PR_NUMBER }}-${{ env.FULL_SHA }} for PR-${{ env.PR_NUMBER }}"
          git push origin HEAD:${{ github.event.pull_request.head.ref }}